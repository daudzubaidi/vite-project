name: release-please
on:
  push:
    branches:
      - main
      - beta  # Assuming you have a beta branch for pre-releases

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4

      - name: Determine if Pre-release
        id: prerelease_check
        run: |
          echo "github.ref=${{ github.ref }}"
          echo "Expected ref=refs/heads/beta"
          if [[ "${{ github.ref }}" == "refs/heads/beta" ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
            echo "Branch is beta, setting IS_PRERELEASE=true"
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
            echo "Branch is not beta, setting IS_PRERELEASE=false"
          fi

      - name: Print IS_PRERELEASE value
        run: echo "IS_PRERELEASE value is $IS_PRERELEASE"

      - name: Run Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: node
          versioning-strategy: prerelease
          prerelease: ${{ env.IS_PRERELEASE }}

      - name: Get Data from PR Release Please
        id: get-pr-data
        run: |
          PR_TITLE=$(echo '${{ steps.release.outputs.pr }}' | jq -r '.title')
          PR_HEAD_BRANCH_NAME=$(echo '${{ steps.release.outputs.pr }}' | jq -r '.headBranchName')
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_HEAD_BRANCH_NAME=$PR_HEAD_BRANCH_NAME" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_HEAD_BRANCH_NAME }}

      - name: Update package.json version
        run: |
          if [ -n "$PR_TITLE" ]; then  # Check if PR_TITLE is not empty
            # Directly use PR_TITLE as the version
            VERSION="$PR_TITLE"
            jq ".version=\"$VERSION\"" package.json > tmp.json && mv tmp.json package.json
            echo "Updated package.json to version $VERSION."
            echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "PR title is empty, skipping package.json update."
          fi